<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>// Place global declarations here.


// :: Batch Policy configuration ::
const int batchSizePolicy = 100;
const int batchRatePolicy = 500;

const int heartBeatRate = 20;
// ::

// :: Satellite sensors configuration :: 

const int nSensors = 3; // Number of sensors on a satellite

typedef int[0,nSensors-1] sens_id; // Sensors id (from 0 to nSensors-1)

// Sensors data
typedef struct {
    int samplingRate;
} sensor_t;

clock samplingClock[nSensors];
chan sampleSensor[nSensors];
chan sampledSensor[nSensors];

// Configuration of sensors on the sattelite ({sampling Rate})
const sensor_t sensors[nSensors] = {
    {25},
    {50},
    {300}
};

// ::


// :: Server

bool SatelliteRegisteredWithServer = false;
int ServerHash = 0;

// :: OTA
int SatelliteHash = -1;
int ActivePartition = 1;

// ::

</declaration>
	<template>
		<name>SatelliteSensor</name>
		<parameter>chan &amp;sample, chan &amp;sampled</parameter>
		<declaration>clock samplingClock;</declaration>
		<location id="id0" x="-680" y="-238">
			<name x="-697" y="-272">Idle</name>
		</location>
		<location id="id1" x="-510" y="-136">
			<name x="-544" y="-119">Sampling</name>
		</location>
		<init ref="id0"/>
		<transition id="id2">
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-765" y="-187">sampled!</label>
			<label kind="assignment" x="-850" y="-170">samplingClock := 0</label>
			<nail x="-680" y="-136"/>
		</transition>
		<transition id="id3">
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-578" y="-263">sample?</label>
			<nail x="-510" y="-238"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">SatelliteMainRoutine</name>
		<parameter>chan &amp;OTAUpdated, chan &amp;OTAUpdate, chan &amp;OTAChecked, chan &amp;OTACheck, chan &amp;satelliteBoot, chan &amp;sensorDataSent, chan &amp;serverACKReceived, bool &amp;requireOTA</parameter>
		<declaration>const int maxSampleMemoryHolding = batchSizePolicy * 2;
typedef int[0,maxSampleMemoryHolding-1] samp_id; // Sample id

// Samples list
sens_id samples[maxSampleMemoryHolding+1];
int[0,maxSampleMemoryHolding] samplesLength;

void samplesAdd(sens_id sample_source){
    samples[samplesLength++] = sample_source;
}

void clearSamples(){
    int i = 0;
    while (i &lt; samplesLength)
    {
        samples[i] = 0;
        i++;
    }
    samplesLength = 0;
}


// Sensors sampling queue
sens_id samplingQueue[nSensors];
int[0,nSensors] samplingQueueLength = 0;

sens_id sampleTargetId = 0;

// Add a sensor to the sampling queue
void samplingQueueAdd(sens_id sensor){
    samplingQueue[samplingQueueLength++] = sensor;
}

// Add all sensors late on sampling to the sampling queue
void updateSamplingQueue(){
    int i;
    for (i = 0; i &lt; nSensors; i++) {
        if (sensors[i].samplingRate &lt; samplingClock[i]) {
            samplingQueueAdd(i);
        }
    }
}


// Return and remove the front element of the queue
sens_id samplingQueueDequeue()
{
    int i = 0;
    samplingQueueLength -= 1;
    while (i &lt; samplingQueueLength)
    {
        samplingQueue[i] = samplingQueue[i + 1];
        i++;
    }

    return samplingQueue[i];
}

// Idle time 

int idleTime = 0;

int getIdleTime(){
    int min = sensors[0].samplingRate;
    int i = 0;
    for (i = 1; i &lt; nSensors; i++) {
        int tUntilSamplingOfSensor = 0;
        tUntilSamplingOfSensor = sensors[i].samplingRate;
        if (tUntilSamplingOfSensor &lt; min) {
            min = tUntilSamplingOfSensor;
        }
    }

    if (batchRatePolicy &lt; min) {
       min = batchRatePolicy;
    }

    if (heartBeatRate &lt; min) {
       min = heartBeatRate;
    }
    return min;
}


clock sleepClock, timeoutClock, batchClock;

</declaration>
		<location id="id4" x="459" y="212">
			<name x="468" y="186">batchSizePolicyTrue</name>
		</location>
		<location id="id5" x="357" y="212">
			<name x="221" y="187">batchratePolicy</name>
		</location>
		<location id="id6" x="-323" y="-34">
			<name x="-391" y="-68">Sleeping</name>
		</location>
		<location id="id7" x="-68" y="433">
			<name x="-59" y="399">Received</name>
		</location>
		<location id="id8" x="680" y="297">
			<name x="670" y="263">ACKTimeOut</name>
		</location>
		<location id="id9" x="-102" y="-102">
			<name x="-195" y="-136">CheckingSensorsSampling</name>
		</location>
		<location id="id10" x="408" y="433">
			<name x="425" y="408">PendingACK</name>
		</location>
		<location id="id11" x="408" y="297">
			<name x="425" y="271">Sending</name>
		</location>
		<location id="id12" x="773" y="-102">
			<name x="782" y="-127">Sampling</name>
		</location>
		<location id="id13" x="773" y="-203">
			<name x="756" y="-237">Buffering</name>
		</location>
		<location id="id14" x="408" y="102">
			<name x="425" y="76">CheckingBatchPolicy</name>
		</location>
		<location id="id15" x="-68" y="102">
			<name x="-127" y="68">SendingHearbeatAndLogs</name>
		</location>
		<location id="id16" x="-323" y="102">
			<name x="-408" y="119">CheckingForOTAUpdate</name>
		</location>
		<location id="id17" x="-425" y="-102">
			<name x="-476" y="-136">Updating</name>
		</location>
		<location id="id18" x="408" y="-102">
			<name x="425" y="-127">ClocksUpdate</name>
		</location>
		<location id="id19" x="-102" y="-170">
			<name x="-102" y="-213">Idle</name>
		</location>
		<location id="id20" x="-425" y="0">
			<name x="-493" y="-25">subStep</name>
			<committed/>
		</location>
		<init ref="id19"/>
		<transition id="id21">
			<source ref="id4"/>
			<target ref="id11"/>
		</transition>
		<transition id="id22">
			<source ref="id5"/>
			<target ref="id11"/>
		</transition>
		<transition id="id23">
			<source ref="id14"/>
			<target ref="id4"/>
			<label kind="guard" x="442" y="170">samplesLength &gt;= batchSizePolicy</label>
		</transition>
		<transition id="id24">
			<source ref="id14"/>
			<target ref="id5"/>
			<label kind="guard" x="110" y="170">batchClock &gt;= batchRatePolicy</label>
		</transition>
		<transition id="id25">
			<source ref="id20"/>
			<target ref="id17"/>
			<label kind="synchronisation" x="-510" y="-68">OTAUpdate!</label>
		</transition>
		<transition id="id26">
			<source ref="id19"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="-93" y="-153">satelliteBoot?</label>
		</transition>
		<transition id="id27">
			<source ref="id13"/>
			<target ref="id18"/>
			<label kind="assignment" x="442" y="-229">samplesAdd(sampleTargetId)</label>
			<nail x="408" y="-204"/>
		</transition>
		<transition id="id28">
			<source ref="id18"/>
			<target ref="id14"/>
			<label kind="guard" x="161" y="-17">samplingQueueLength == 0</label>
		</transition>
		<transition id="id29">
			<source ref="id18"/>
			<target ref="id12"/>
			<label kind="guard" x="442" y="-85">samplingQueueLength &gt; 0</label>
			<label kind="synchronisation" x="442" y="-51">sampleSensor[sampleTargetId]!</label>
			<label kind="assignment" x="442" y="-68">sampleTargetId := samplingQueueDequeue()</label>
		</transition>
		<transition id="id30">
			<source ref="id9"/>
			<target ref="id18"/>
			<label kind="assignment" x="51" y="-127">updateSamplingQueue()</label>
		</transition>
		<transition id="id31">
			<source ref="id17"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="-357" y="-127">OTAUpdated?</label>
		</transition>
		<transition id="id32">
			<source ref="id16"/>
			<target ref="id20"/>
			<label kind="guard" x="-561" y="42">requireOTA==true</label>
			<label kind="synchronisation" x="-518" y="59">OTAChecked?</label>
			<nail x="-425" y="102"/>
			<nail x="-425" y="17"/>
		</transition>
		<transition id="id33">
			<source ref="id16"/>
			<target ref="id6"/>
			<label kind="guard" x="-314" y="8">requireOTA==false</label>
			<label kind="synchronisation" x="-314" y="-8">OTAChecked?</label>
			<label kind="assignment" x="-314" y="25">idleTime := getIdleTime(),
sleepClock := 0</label>
		</transition>
		<transition id="id34">
			<source ref="id15"/>
			<target ref="id16"/>
			<label kind="synchronisation" x="-238" y="76">OTACheck!</label>
		</transition>
		<transition id="id35">
			<source ref="id14"/>
			<target ref="id15"/>
			<label kind="guard" x="-34" y="102">batchClock &lt; batchRatePolicy &amp;&amp; 
samplesLength &lt; batchSizePolicy</label>
		</transition>
		<transition id="id36">
			<source ref="id12"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="782" y="-170">sampledSensor[sampleTargetId]?</label>
		</transition>
		<transition id="id37">
			<source ref="id6"/>
			<target ref="id9"/>
			<label kind="guard" x="-306" y="-59">sleepClock &gt;= idleTime</label>
			<nail x="-102" y="-34"/>
		</transition>
		<transition id="id38">
			<source ref="id7"/>
			<target ref="id15"/>
			<label kind="assignment" x="-59" y="306">clearSamples()</label>
		</transition>
		<transition id="id39">
			<source ref="id10"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="59" y="442">serverACKReceived?</label>
		</transition>
		<transition id="id40">
			<source ref="id8"/>
			<target ref="id11"/>
		</transition>
		<transition id="id41">
			<source ref="id10"/>
			<target ref="id8"/>
			<label kind="guard" x="484" y="442">timeoutClock &gt;= 420</label>
			<nail x="680" y="433"/>
		</transition>
		<transition id="id42">
			<source ref="id11"/>
			<target ref="id10"/>
			<label kind="synchronisation" x="238" y="340">sensorDataSent!</label>
			<label kind="assignment" x="221" y="357">timeoutClock := 0</label>
		</transition>
	</template>
	<template>
		<name>SatelliteRegistration</name>
		<parameter>chan &amp;reqRegistration, chan &amp;registrationACK, chan &amp;OTAUpdate, chan &amp;OTAUpdated, chan &amp;satelliteBoot</parameter>
		<declaration>clock timeoutClock;

const int maxTimeout = 420;</declaration>
		<location id="id43" x="-952" y="323">
			<name x="-926" y="314">RegistrationAndInitialisationComplete</name>
		</location>
		<location id="id44" x="-952" y="-102">
			<name x="-962" y="-136">Unregistered</name>
		</location>
		<location id="id45" x="-161" y="-229">
			<name x="-204" y="-263">ACKtimeout</name>
		</location>
		<location id="id46" x="-1190" y="-17">
			<name x="-1182" y="-51">Idle</name>
			<label kind="comments" x="-1377" y="-68">IoT device</label>
		</location>
		<location id="id47" x="-714" y="-102">
			<name x="-765" y="-85">ReadRAMLData</name>
		</location>
		<location id="id48" x="-459" y="-102">
			<name x="-544" y="-85">RequestRegistration</name>
		</location>
		<location id="id49" x="-161" y="-102">
			<name x="-144" y="-136">PendingServerACK</name>
		</location>
		<location id="id50" x="-552" y="59">
			<name x="-595" y="76">ServerACK</name>
		</location>
		<location id="id51" x="-952" y="59">
			<name x="-962" y="25">Registered</name>
		</location>
		<location id="id52" x="-952" y="170">
			<name x="-926" y="153">InitialOTAUpdateInProgress</name>
		</location>
		<location id="id53" x="-952" y="246">
			<name x="-935" y="229">subStep</name>
			<committed/>
		</location>
		<init ref="id46"/>
		<transition id="id54">
			<source ref="id53"/>
			<target ref="id43"/>
			<label kind="synchronisation" x="-943" y="263">satelliteBoot!</label>
		</transition>
		<transition id="id55">
			<source ref="id52"/>
			<target ref="id53"/>
			<label kind="synchronisation" x="-935" y="187">OTAUpdated?</label>
		</transition>
		<transition id="id56">
			<source ref="id51"/>
			<target ref="id52"/>
			<label kind="synchronisation" x="-943" y="93">OTAUpdate!</label>
		</transition>
		<transition id="id57">
			<source ref="id44"/>
			<target ref="id47"/>
		</transition>
		<transition id="id58">
			<source ref="id46"/>
			<target ref="id44"/>
			<label kind="guard" x="-1385" y="-110">SatelliteRegisteredWithServer == false</label>
		</transition>
		<transition id="id59">
			<source ref="id46"/>
			<target ref="id51"/>
			<label kind="guard" x="-1368" y="34">SatelliteRegisteredWithServer == true</label>
		</transition>
		<transition id="id60">
			<source ref="id45"/>
			<target ref="id48"/>
			<nail x="-459" y="-229"/>
		</transition>
		<transition id="id61">
			<source ref="id50"/>
			<target ref="id51"/>
		</transition>
		<transition id="id62">
			<source ref="id49"/>
			<target ref="id45"/>
			<label kind="guard" x="-144" y="-187">timeoutClock &gt; maxTimeout</label>
		</transition>
		<transition id="id63">
			<source ref="id49"/>
			<target ref="id50"/>
			<label kind="synchronisation" x="-425" y="68">registrationACK?</label>
			<nail x="-161" y="59"/>
		</transition>
		<transition id="id64">
			<source ref="id48"/>
			<target ref="id49"/>
			<label kind="synchronisation" x="-391" y="-144">reqRegistration!</label>
			<label kind="assignment" x="-391" y="-127">timeoutClock := 0</label>
		</transition>
		<transition id="id65">
			<source ref="id47"/>
			<target ref="id48"/>
		</transition>
	</template>
	<template>
		<name>ServerRegistration</name>
		<parameter>chan &amp;registrationACK, chan &amp;reqRegistration, bool &amp;satelliteRegisteredWithServer</parameter>
		<location id="id66" x="-399" y="51">
			<name x="-442" y="18">Idle</name>
		</location>
		<location id="id67" x="306" y="-68">
			<name x="314" y="-102">InsertedIntoDB</name>
		</location>
		<location id="id68" x="-246" y="-68">
			<name x="-331" y="-102">RegistrationRequested</name>
		</location>
		<location id="id69" x="8" y="-68">
			<name x="-26" y="-102">parsingData</name>
		</location>
		<init ref="id66"/>
		<transition id="id70">
			<source ref="id67"/>
			<target ref="id66"/>
			<label kind="synchronisation" x="-212" y="-229">registrationACK!</label>
			<nail x="306" y="-204"/>
			<nail x="-399" y="-204"/>
		</transition>
		<transition id="id71">
			<source ref="id69"/>
			<target ref="id67"/>
			<label kind="assignment" x="8" y="-51">satelliteRegisteredWithServer := true</label>
		</transition>
		<transition id="id72">
			<source ref="id68"/>
			<target ref="id69"/>
		</transition>
		<transition id="id73">
			<source ref="id66"/>
			<target ref="id68"/>
			<label kind="synchronisation" x="-323" y="34">reqRegistration?</label>
			<nail x="-246" y="8"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">XtextEditor</name>
		<parameter>chan &amp;KeyPress, chan &amp;KeyPressEnd, chan &amp;ReqCompile, chan &amp;RecCompileError, chan &amp;RecCompiled</parameter>
		<declaration>// Place local declarations here.
clock validationWait, compilationWait, loadTime;
int contentLength;
int contentId;
int loadingRetryCount;

//0 empty, 1 awaiting compile, 2 compile error, 3 compiled
int loadState;</declaration>
		<location id="id74" x="-1606" y="-272">
			<name x="-1598" y="-306">Compiled</name>
		</location>
		<location id="id75" x="-1088" y="-553">
			<name x="-1147" y="-595">ValidationError</name>
		</location>
		<location id="id76" x="-1308" y="-654">
			<name x="-1334" y="-705">Writing</name>
		</location>
		<location id="id77" x="-1308" y="-272">
			<name x="-1290" y="-315">Compiling</name>
		</location>
		<location id="id78" x="-1487" y="-493">
			<name x="-1523" y="-536">CompileError</name>
		</location>
		<location id="id79" x="-875" y="-425">
			<name x="-850" y="-459">Validated</name>
		</location>
		<location id="id80" x="-1309" y="-765">
			<name x="-1326" y="-799">Empty</name>
		</location>
		<location id="id81" x="-1972" y="-765">
			<name x="-2031" y="-808">Unloaded</name>
		</location>
		<location id="id82" x="-1717" y="-765">
			<name x="-1734" y="-799">Loaded</name>
			<label kind="invariant" x="-1887" y="-859">(contentLength==0 &amp;&amp; loadState == 0) ||
(contentLength&gt;0 &amp;&amp; loadState &gt;= 1 &amp;&amp; loadState &lt;=3)</label>
		</location>
		<location id="id83" x="-1980" y="-646">
			<name x="-2031" y="-680">LoadingFailure</name>
		</location>
		<branchpoint id="id84" x="-875" y="-655"/>
		<init ref="id81"/>
		<transition id="id85">
			<source ref="id84"/>
			<target ref="id79"/>
			<label kind="probability" x="-867" y="-587">10</label>
		</transition>
		<transition id="id86">
			<source ref="id84"/>
			<target ref="id75"/>
			<label kind="probability" x="-952" y="-587">1</label>
			<nail x="-943" y="-553"/>
		</transition>
		<transition id="id87" controllable="false">
			<source ref="id76"/>
			<target ref="id84"/>
			<label kind="guard" x="-1079" y="-697">contentLength &gt; 0</label>
			<label kind="synchronisation" x="-1079" y="-680">KeyPressEnd?</label>
		</transition>
		<transition id="id88">
			<source ref="id81"/>
			<target ref="id82"/>
		</transition>
		<transition id="id89">
			<source ref="id83"/>
			<target ref="id81"/>
			<nail x="-2065" y="-646"/>
		</transition>
		<transition id="id90">
			<source ref="id81"/>
			<target ref="id83"/>
			<label kind="guard" x="-1929" y="-723">loadTime &gt;=1000</label>
			<nail x="-1887" y="-646"/>
		</transition>
		<transition id="id91">
			<source ref="id82"/>
			<target ref="id77"/>
			<label kind="guard" x="-1291" y="-204">loadState == 1</label>
			<nail x="-1717" y="-153"/>
			<nail x="-1308" y="-153"/>
		</transition>
		<transition id="id92">
			<source ref="id82"/>
			<target ref="id78"/>
			<label kind="guard" x="-1623" y="-204">loadState == 2</label>
			<nail x="-1717" y="-153"/>
			<nail x="-1487" y="-153"/>
		</transition>
		<transition id="id93">
			<source ref="id82"/>
			<target ref="id74"/>
			<label kind="guard" x="-1853" y="-323">loadState == 3</label>
			<nail x="-1717" y="-272"/>
		</transition>
		<transition id="id94">
			<source ref="id82"/>
			<target ref="id80"/>
			<label kind="guard" x="-1615" y="-757">loadState==0</label>
		</transition>
		<transition id="id95">
			<source ref="id76"/>
			<target ref="id80"/>
			<label kind="guard" x="-1249" y="-748">contentLength == 0</label>
			<label kind="synchronisation" x="-1249" y="-765">KeyPressEnd?</label>
			<label kind="assignment" x="-1249" y="-731">loadState:=0</label>
			<nail x="-1249" y="-714"/>
		</transition>
		<transition id="id96">
			<source ref="id80"/>
			<target ref="id76"/>
			<label kind="synchronisation" x="-1453" y="-722">KeyPress?</label>
			<nail x="-1368" y="-714"/>
		</transition>
		<transition id="id97">
			<source ref="id79"/>
			<target ref="id77"/>
			<label kind="synchronisation" x="-1071" y="-298">ReqCompile!</label>
			<label kind="assignment" x="-1071" y="-272">loadState:=1</label>
			<nail x="-875" y="-272"/>
		</transition>
		<transition id="id98">
			<source ref="id79"/>
			<target ref="id76"/>
			<label kind="synchronisation" x="-1275" y="-459">KeyPress?</label>
			<nail x="-1071" y="-425"/>
			<nail x="-1308" y="-425"/>
		</transition>
		<transition id="id99">
			<source ref="id77"/>
			<target ref="id74"/>
			<label kind="synchronisation" x="-1479" y="-297">RecCompiled?</label>
			<label kind="assignment" x="-1479" y="-272">loadState:=3</label>
		</transition>
		<transition id="id100">
			<source ref="id78"/>
			<target ref="id76"/>
			<label kind="synchronisation" x="-1428" y="-519">KeyPress?</label>
			<nail x="-1309" y="-493"/>
		</transition>
		<transition id="id101">
			<source ref="id77"/>
			<target ref="id78"/>
			<label kind="synchronisation" x="-1470" y="-408">RecCompileError?</label>
			<label kind="assignment" x="-1469" y="-382">loadState:=2</label>
			<nail x="-1351" y="-382"/>
			<nail x="-1487" y="-382"/>
		</transition>
		<transition id="id102">
			<source ref="id77"/>
			<target ref="id76"/>
			<label kind="synchronisation" x="-1291" y="-349">KeyPress?</label>
		</transition>
		<transition id="id103">
			<source ref="id75"/>
			<target ref="id76"/>
			<label kind="synchronisation" x="-1258" y="-578">KeyPress?</label>
			<nail x="-1309" y="-553"/>
		</transition>
		<transition id="id104">
			<source ref="id74"/>
			<target ref="id76"/>
			<label kind="synchronisation" x="-1529" y="-604">KeyPress?</label>
			<nail x="-1606" y="-578"/>
			<nail x="-1308" y="-578"/>
		</transition>
	</template>
	<template>
		<name>XtextCompiler</name>
		<parameter>chan &amp;ReqCompile, chan &amp;SendCompileError, chan &amp;SendCompiled</parameter>
		<declaration>clock compileTime;</declaration>
		<location id="id105" x="-960" y="-425">
			<name x="-1037" y="-467">AwaitingCompilation</name>
		</location>
		<location id="id106" x="-671" y="-425">
			<name x="-698" y="-468">Compiling</name>
		</location>
		<location id="id107" x="-756" y="-348">
			<name x="-807" y="-382">CompileError</name>
		</location>
		<location id="id108" x="-569" y="-425">
			<name x="-579" y="-459">Saving</name>
		</location>
		<init ref="id105"/>
		<transition id="id109">
			<source ref="id108"/>
			<target ref="id105"/>
			<label kind="synchronisation" x="-816" y="-289">SendCompiled!</label>
			<label kind="assignment" x="-816" y="-255">ServerHash++</label>
			<nail x="-569" y="-264"/>
			<nail x="-960" y="-264"/>
		</transition>
		<transition id="id110">
			<source ref="id106"/>
			<target ref="id108"/>
		</transition>
		<transition id="id111">
			<source ref="id106"/>
			<target ref="id107"/>
			<nail x="-671" y="-348"/>
		</transition>
		<transition id="id112">
			<source ref="id107"/>
			<target ref="id105"/>
			<label kind="synchronisation" x="-918" y="-340">SendCompileError!</label>
			<nail x="-926" y="-348"/>
		</transition>
		<transition id="id113">
			<source ref="id105"/>
			<target ref="id106"/>
			<label kind="synchronisation" x="-850" y="-459">ReqCompile?</label>
		</transition>
	</template>
	<template>
		<name x="5" y="5">SatelliteOTAUpdate</name>
		<parameter>chan &amp;OTAUpdate, chan &amp;RequireOTA, chan &amp;OTAChecked, chan &amp;OTAUpdated, chan &amp;OTAChecked, int &amp;serverHash, int &amp;deviceHash, int &amp;activePartition, bool &amp;requireOTA</parameter>
		<declaration>// Place local declarations here.
bool updateAvailable = false;

// for simplicity and time rn max is 2 slots
// This could be improved to check a array of partition slots and then select the next based on that
void setActiveBootPartition() {
    if (activePartition == 1) {
        activePartition = 2;
    } else {
        activePartition = 1;
    } 
}


void updateDeviceHash() {
    deviceHash = serverHash;
}
</declaration>
		<location id="id114" x="348" y="-748">
			<name x="338" y="-782">CheckHash</name>
		</location>
		<location id="id115" x="-1181" y="-782">
			<name x="-1191" y="-816">LogError</name>
		</location>
		<location id="id116" x="-756" y="-238">
			<name x="-799" y="-280">ResumeProgram</name>
		</location>
		<location id="id117" x="824" y="-612">
			<name x="814" y="-646">Restart</name>
		</location>
		<location id="id118" x="484" y="-612">
			<name x="433" y="-646">ValidOTAImage</name>
		</location>
		<location id="id119" x="161" y="-782">
			<name x="77" y="-816">IncompleteAppState</name>
		</location>
		<location id="id120" x="484" y="-484">
			<name x="474" y="-518">InvalidOTAImage</name>
		</location>
		<location id="id121" x="187" y="-535">
			<name x="144" y="-510">AllDataRecieved</name>
		</location>
		<location id="id122" x="25" y="-535">
			<name x="-34" y="-510">WritingInterrupt</name>
		</location>
		<location id="id123" x="-51" y="-586">
			<name x="-61" y="-620">Writing</name>
		</location>
		<location id="id124" x="-535" y="-535">
			<name x="-612" y="-510">GetImageDescription</name>
		</location>
		<location id="id125" x="-782" y="-782">
			<name x="-824" y="-825">ERR</name>
		</location>
		<location id="id126" x="-697" y="-535">
			<name x="-756" y="-510">BeginOTAUpdate</name>
		</location>
		<location id="id127" x="-952" y="-476">
			<name x="-1096" y="-484">CheckForUpdate</name>
		</location>
		<location id="id128" x="-952" y="-357">
			<name x="-1132" y="-365">NoUpdateAvailable</name>
		</location>
		<location id="id129" x="-323" y="-535">
			<name x="-357" y="-510">ValidateImageVersion</name>
		</location>
		<location id="id130" x="-68" y="-535">
			<name x="-102" y="-518">PerformOTA</name>
		</location>
		<location id="id131" x="-1088" y="-629">
			<name x="-1098" y="-663">OTAInit</name>
		</location>
		<init ref="id131"/>
		<transition id="id132">
			<source ref="id131"/>
			<target ref="id127"/>
			<label kind="synchronisation" x="-1122" y="-552">OTAUpdate?</label>
		</transition>
		<transition id="id133">
			<source ref="id121"/>
			<target ref="id118"/>
			<label kind="guard" x="263" y="-629">serverHash == deviceHash</label>
		</transition>
		<transition id="id134">
			<source ref="id121"/>
			<target ref="id120"/>
			<label kind="guard" x="272" y="-484">deviceHash != serverHash</label>
		</transition>
		<transition id="id135">
			<source ref="id114"/>
			<target ref="id121"/>
			<label kind="assignment" x="161" y="-756">updateDeviceHash()</label>
			<nail x="153" y="-697"/>
		</transition>
		<transition id="id136">
			<source ref="id121"/>
			<target ref="id114"/>
		</transition>
		<transition id="id137">
			<source ref="id129"/>
			<target ref="id116"/>
			<label kind="guard" x="-561" y="-365">deviceHash == ServerHash</label>
			<label kind="synchronisation" x="-510" y="-382">OTAUpdated!</label>
		</transition>
		<transition id="id138">
			<source ref="id127"/>
			<target ref="id128"/>
			<label kind="guard" x="-935" y="-433">requireOTA == false</label>
		</transition>
		<transition id="id139">
			<source ref="id122"/>
			<target ref="id119"/>
		</transition>
		<transition id="id140">
			<source ref="id115"/>
			<target ref="id116"/>
			<label kind="synchronisation" x="-986" y="-263">OTAUpdated!</label>
			<nail x="-1181" y="-238"/>
		</transition>
		<transition id="id141">
			<source ref="id125"/>
			<target ref="id115"/>
		</transition>
		<transition id="id142">
			<source ref="id128"/>
			<target ref="id116"/>
			<label kind="synchronisation" x="-875" y="-331">OTAUpdated!</label>
		</transition>
		<transition id="id143">
			<source ref="id119"/>
			<target ref="id125"/>
		</transition>
		<transition id="id144">
			<source ref="id124"/>
			<target ref="id125"/>
			<nail x="-501" y="-629"/>
		</transition>
		<transition id="id145">
			<source ref="id129"/>
			<target ref="id125"/>
		</transition>
		<transition id="id146">
			<source ref="id120"/>
			<target ref="id125"/>
			<nail x="935" y="-484"/>
			<nail x="928" y="-884"/>
			<nail x="-714" y="-884"/>
		</transition>
		<transition id="id147">
			<source ref="id118"/>
			<target ref="id117"/>
			<label kind="synchronisation" x="612" y="-637">OTAUpdated!</label>
			<label kind="assignment" x="552" y="-663">setActiveBootPartition()</label>
		</transition>
		<transition id="id148">
			<source ref="id122"/>
			<target ref="id121"/>
		</transition>
		<transition id="id149">
			<source ref="id130"/>
			<target ref="id122"/>
		</transition>
		<transition id="id150">
			<source ref="id123"/>
			<target ref="id130"/>
			<nail x="-102" y="-586"/>
		</transition>
		<transition id="id151">
			<source ref="id130"/>
			<target ref="id123"/>
		</transition>
		<transition id="id152">
			<source ref="id129"/>
			<target ref="id130"/>
			<label kind="guard" x="-306" y="-561">deviceHash != serverHash</label>
		</transition>
		<transition id="id153">
			<source ref="id124"/>
			<target ref="id129"/>
		</transition>
		<transition id="id154">
			<source ref="id127"/>
			<target ref="id126"/>
			<label kind="guard" x="-934" y="-539">requireOTA == true</label>
		</transition>
		<transition id="id155">
			<source ref="id126"/>
			<target ref="id125"/>
			<nail x="-782" y="-603"/>
		</transition>
		<transition id="id156">
			<source ref="id126"/>
			<target ref="id124"/>
		</transition>
		<transition id="id157">
			<source ref="id127"/>
			<target ref="id125"/>
			<nail x="-952" y="-637"/>
		</transition>
	</template>
	<system>chan reqRegistration, registrationACK, RequireOTA, OTAUpdate, OTAUpdated, satelliteBoot, OTAChecked, OTACheck, sensorDataSent, serverACKReceived;
bool requireOTA = true;
satelliteMainRoutine = SatelliteMainRoutine(OTAUpdated, OTAUpdate, OTAChecked, OTACheck, satelliteBoot, sensorDataSent, serverACKReceived, requireOTA);


chan sample, sampled;
satelliteSensor = SatelliteSensor(sample, sampled);


bool satelliteRegisteredWithServer = false;
serverRegistration = ServerRegistration(registrationACK, reqRegistration, satelliteRegisteredWithServer);


chan ReqCompile, SendCompileError, SendCompiled;
xtextCompiler = XtextCompiler(ReqCompile, SendCompileError, SendCompiled);


satelliteOTAUpdate = SatelliteOTAUpdate(OTAUpdate, RequireOTA, OTAChecked, OTAUpdated,OTAChecked, ServerHash, SatelliteHash, ActivePartition, requireOTA);

satelliteRegistration  =  SatelliteRegistration(reqRegistration, registrationACK, OTAUpdate, OTAUpdated, satelliteBoot);


system satelliteSensor, satelliteMainRoutine, satelliteRegistration, serverRegistration, xtextCompiler, satelliteOTAUpdate;</system>
	<queries>
		<query>
			<formula/>
			<comment/>
		</query>
	</queries>
</nta>
