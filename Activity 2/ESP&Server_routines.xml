<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>// Place global declarations here.


// :: Batch Policy configuration ::
const int batchSizePolicy = 100;
const int batchRatePolicy = 500;

const int heartBeatRate = 20;
// ::

// :: Satellite sensors configuration :: 

const int nSensors = 3; // Number of sensors on a satellite

typedef int[0,nSensors-1] sens_id; // Sensors id (from 0 to nSensors-1)

// Sensors data
typedef struct {
    int samplingRate;
} sensor_t;

clock samplingClock[nSensors];
chan sampleSensor[nSensors];
chan sampledSensor[nSensors];

// Configuration of sensors on the sattelite ({sampling Rate})
const sensor_t sensors[nSensors] = {
    {25},
    {50},
    {300}
};

// ::

</declaration>
	<template>
		<name>Sensor</name>
		<parameter>sensor_t &amp;sensor, chan &amp;sample, chan &amp;sampled, clock &amp;samplingClock</parameter>
		<location id="id0" x="-680" y="-238">
			<name x="-697" y="-272">Idle</name>
		</location>
		<location id="id1" x="-510" y="-136">
			<name x="-544" y="-119">Sampling</name>
		</location>
		<init ref="id0"/>
		<transition id="id2">
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-765" y="-187">sampled!</label>
			<label kind="assignment" x="-850" y="-170">samplingClock := 0</label>
			<nail x="-680" y="-136"/>
		</transition>
		<transition id="id3">
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-578" y="-263">sample?</label>
			<nail x="-510" y="-238"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">ESP_MainRoutine</name>
		<parameter>chan &amp;OTAESPComplete, chan &amp;OTAESPReq,  chan &amp;OTACheck, chan &amp;ServerACKReceived, chan &amp;sensorDataSent, chan &amp;sampleSensor, chan &amp;sampledSensor, bool &amp;OTAServerReq</parameter>
		<declaration>int maxSampleMemoryHolding = batchSizePolicy * 2;
typedef int[0,maxSampleMemoryHolding-1] samp_id; // Sample id

// Samples list
sens_id samples[maxSampleMemoryHolding+1];
int[0,maxSampleMemoryHolding] samplesLength;

void samplesAdd(sens_id sample_source){
    samples[samplesLength++] = sample_source;
}

void clearSamples(){
    int i = 0;
    while (i &lt; samplesLength)
    {
        samples[i] = 0;
        i++;
    }
    samplesLength = 0;
}


// Sensors sampling queue
sens_id samplingQueue[nSensors];
int[0,nSensors] samplingQueueLength = 0;

sens_id sampleTargetId = 0;

// Add a sensor to the sampling queue
void samplingQueueAdd(sens_id sensor){
    samplingQueue[samplingQueueLength++] = sensor;
}

// Add all sensors late on sampling to the sampling queue
void updateSamplingQueue(){
    int i;
    for (i = 0; i &lt; nSensors; i++) {
        if (sensors[i].samplingRate &lt; samplingClock[i]) {
            samplingQueueAdd(i);
        }
    }
}


// Return and remove the front element of the queue
sens_id samplingQueueDequeue()
{
    int i = 0;
    samplingQueueLength -= 1;
    while (i &lt; samplingQueueLength)
    {
        samplingQueue[i] = samplingQueue[i + 1];
        i++;
    }

    return samplingQueue[i];
}

// Idle time 

int IdleTime = 0;

int getIdleTime(){
    int min = sensors[0].samplingRate - samplingClock[0];
    int i;
    for (i = 1; i &lt; nSensors; i++) {
        int tUntilSamplingOfSensor = sensors[i].samplingRate - samplingClock[i];
        if (tUntilSamplingOfSensor &lt; min) {
            min = tUntilSamplingOfSensor;
        }
    }

    if (batchRatePolicy &lt; min) {
       min = batchRatePolicy;
    }

    if (heartBeatRate &lt; min) {
       min = heartBeatRate;
    }
    return min;
}


clock ESPMainClock, timeoutClock, batchClock;</declaration>
		<location id="id4" x="-323" y="-34">
			<name x="-374" y="-68">Sleeping</name>
		</location>
		<location id="id5" x="-68" y="365">
			<name x="-59" y="331">Received</name>
		</location>
		<location id="id6" x="680" y="229">
			<name x="670" y="195">ACKTimeOut</name>
		</location>
		<location id="id7" x="-102" y="-102">
			<name x="-161" y="-136">CheckingSensorsSampling</name>
		</location>
		<location id="id8" x="374" y="365">
			<name x="391" y="340">PendingACK</name>
		</location>
		<location id="id9" x="374" y="229">
			<name x="391" y="203">Sending</name>
		</location>
		<location id="id10" x="773" y="-102">
			<name x="782" y="-127">Sampling</name>
		</location>
		<location id="id11" x="773" y="-203">
			<name x="756" y="-237">Buffering</name>
		</location>
		<location id="id12" x="374" y="102">
			<name x="391" y="68">CheckingBatchPolicy</name>
		</location>
		<location id="id13" x="-68" y="102">
			<name x="-127" y="68">SendingHearbeatAndLogs</name>
		</location>
		<location id="id14" x="-323" y="102">
			<name x="-408" y="119">CheckingForOTAUpdate</name>
		</location>
		<location id="id15" x="-425" y="-102">
			<name x="-476" y="-136">Updating</name>
		</location>
		<location id="id16" x="374" y="-102">
			<name x="382" y="-136">ClocksUpdate</name>
		</location>
		<init ref="id7"/>
		<transition id="id17">
			<source ref="id11"/>
			<target ref="id16"/>
			<label kind="assignment" x="442" y="-229">samplesAdd(sampleTargetId)</label>
			<nail x="374" y="-203"/>
		</transition>
		<transition id="id18">
			<source ref="id16"/>
			<target ref="id12"/>
			<label kind="guard" x="382" y="0">samplingQueueLength == 0</label>
		</transition>
		<transition id="id19">
			<source ref="id16"/>
			<target ref="id10"/>
			<label kind="guard" x="408" y="-85">samplingQueueLength &gt; 0</label>
			<label kind="synchronisation" x="408" y="-51">sampleSensor[sampleTargetId]!</label>
			<label kind="assignment" x="408" y="-68">sampleTargetId := samplingQueueDequeue()</label>
		</transition>
		<transition id="id20">
			<source ref="id7"/>
			<target ref="id16"/>
			<label kind="assignment" x="34" y="-93">updateSamplingQueue()</label>
		</transition>
		<transition id="id21">
			<source ref="id15"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-340" y="-127">OTAESPComplete?</label>
		</transition>
		<transition id="id22">
			<source ref="id14"/>
			<target ref="id15"/>
			<label kind="guard" x="-586" y="-8">OTAServerReq==true</label>
			<label kind="synchronisation" x="-518" y="-25">OTAESPReq!</label>
			<nail x="-425" y="102"/>
		</transition>
		<transition id="id23">
			<source ref="id14"/>
			<target ref="id4"/>
			<label kind="guard" x="-314" y="17">OTAServerReq==false</label>
		</transition>
		<transition id="id24">
			<source ref="id13"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="-255" y="76">OTACheck?</label>
		</transition>
		<transition id="id25">
			<source ref="id12"/>
			<target ref="id13"/>
			<label kind="guard" x="8" y="110">batchClock &lt; batchRatePolicy || 
samplesLength &lt; batchSizePolicy</label>
		</transition>
		<transition id="id26">
			<source ref="id10"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="782" y="-161">sampledSensor[sampleTargetId]?</label>
		</transition>
		<transition id="id27">
			<source ref="id4"/>
			<target ref="id7"/>
			<label kind="assignment" x="-272" y="-59">ESPMainClock:=0</label>
			<nail x="-102" y="-34"/>
		</transition>
		<transition id="id28">
			<source ref="id5"/>
			<target ref="id13"/>
			<label kind="assignment" x="-59" y="238">clearSamples()</label>
		</transition>
		<transition id="id29">
			<source ref="id12"/>
			<target ref="id9"/>
			<label kind="guard" x="391" y="136">batchClock &gt;= batchRatePolicy || 
samplesLength &gt;= batchSizePolicy</label>
		</transition>
		<transition id="id30">
			<source ref="id8"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="59" y="365">ServerACKReceived?</label>
		</transition>
		<transition id="id31">
			<source ref="id6"/>
			<target ref="id9"/>
		</transition>
		<transition id="id32">
			<source ref="id8"/>
			<target ref="id6"/>
			<label kind="guard" x="459" y="374">timeoutClock &gt;= 420</label>
			<nail x="680" y="365"/>
		</transition>
		<transition id="id33">
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="238" y="272">sensorDataSent!</label>
			<label kind="assignment" x="221" y="289">timeoutClock := 0</label>
		</transition>
	</template>
	<system></system>
	<queries>
		<query>
			<formula/>
			<comment/>
		</query>
	</queries>
</nta>
